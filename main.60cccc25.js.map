{"version":3,"sources":["scripts/main.js"],"names":["baseUrl","createTableInfo","classElement","phone","blockPhones","document","createElement","innerHTML","className","body","append","createNotification","info","notification","style","setTimeout","remove","getIdPhones","fetch","then","response","json","catch","err","getIdPhoneDetails","id","getFirstReceivedDetails","arrIdPhones","Promise","race","map","name","getAllSuccessfulDetails","ulPhones","all","arr","elem","listId"],"mappings":";AAAA,aAGA,IAAMA,EAAN,iEAGMC,EAAkB,SAACC,GAAcC,IAAAA,EAAQ,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GACvCC,EAAcC,SAASC,cAAc,OAWpCF,OATPA,EAAYG,UAERL,iBAAAA,OAAiB,mBAAjBA,EAAoC,iBAAmB,iBAEtDC,oBAAAA,OAAAA,EAJL,YAMAC,EAAYI,UAAYN,EACxBG,SAASI,KAAKC,OAAON,GAEdA,GAGHO,EAAqB,SAACC,GACpBC,IAAAA,EAAeR,SAASC,cAAc,OAE5CO,EAAaN,UAAYK,EACzBC,EAAaC,MAAQ,iDACrBT,SAASI,KAAKC,OAAOG,GAErBE,WAAW,WAAMF,OAAAA,EAAaG,UAAU,MAGpCC,EAAc,WACXC,OAAAA,MAAMlB,EAAU,eACpBmB,KAAK,SAAAC,GAAYA,OAAAA,EAASC,SAC1BC,MAAM,SAAAC,GAAOR,OAAAA,WAAW,WAAMQ,OAAAA,GAAK,QAGlCC,EAAoB,SAACC,GAClBP,OAAAA,MAAMlB,EAAU,UAAYyB,EAAK,SACrCN,KAAK,SAAAC,GAAYA,OAAAA,EAASC,SAC1BC,MAAM,SAAAC,GAAOA,OAAAA,KAGZG,EAA0B,SAACC,GAC/BC,QAAQC,KAAKF,EAAYG,IAAI,SAAA3B,GAASqB,OAAAA,EAAkBrB,MACrDgB,KAAK,SAAAC,GACJnB,EAAgB,iBAAkBmB,EAASW,MAC3CpB,EAAmB,qDAInBqB,EAA0B,SAACL,GACzBvB,IAAAA,EAAcH,EAAgB,kBAE9BgC,EAAW5B,SAASC,cAAc,MAExCsB,QAAQM,IAAIP,EAAYG,IAAI,SAAA3B,GAASqB,OAAAA,EAAkBrB,MACpDgB,KAAK,SAAAgB,GACJA,EAAIL,IAAI,SAAAM,GACNH,EAAS1B,WAKL6B,gJAAAA,OAAAA,EAAKL,KALT,WAOF3B,EAAYM,OAAOuB,GACnBtB,EAAmB,oDAIzBM,IAAcE,KAAK,SAAAgB,GACXE,IAAAA,EAASF,EAAIL,IAAI,SAAA3B,GAASA,OAAAA,EAAMsB,KAEtCC,EAAwBW,GACxBL,EAAwBK","file":"main.60cccc25.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// write code here\nconst baseUrl = `\n  https://mate-academy.github.io/phone-catalogue-static/api/`;\n\nconst createTableInfo = (classElement, phone = '') => {\n  const blockPhones = document.createElement('div');\n\n  blockPhones.innerHTML = `\n  <h2>\n    ${classElement === 'first-received' ? 'First Received' : 'All Successful'}\n  </h2>\n  <p>${phone}</p>\n  `;\n  blockPhones.className = classElement;\n  document.body.append(blockPhones);\n\n  return blockPhones;\n};\n\nconst createNotification = (info) => {\n  const notification = document.createElement('div');\n\n  notification.innerHTML = info;\n  notification.style = 'position:relative; top: -300px; padding: 20px;';\n  document.body.append(notification);\n\n  setTimeout(() => notification.remove(), 1000);\n};\n\nconst getIdPhones = () => {\n  return fetch(baseUrl + 'phones.json')\n    .then(response => response.json())\n    .catch(err => setTimeout(() => err, 5000));\n};\n\nconst getIdPhoneDetails = (id) => {\n  return fetch(baseUrl + 'phones/' + id + '.json')\n    .then(response => response.json())\n    .catch(err => err);\n};\n\nconst getFirstReceivedDetails = (arrIdPhones) => {\n  Promise.race(arrIdPhones.map(phone => getIdPhoneDetails(phone)))\n    .then(response => {\n      createTableInfo('first-received', response.name);\n      createNotification('<h2>recived first details phone succes!!!</h2>');\n    });\n};\n\nconst getAllSuccessfulDetails = (arrIdPhones) => {\n  const blockPhones = createTableInfo('all-successful');\n\n  const ulPhones = document.createElement('ul');\n\n  Promise.all(arrIdPhones.map(phone => getIdPhoneDetails(phone)))\n    .then(arr => {\n      arr.map(elem => {\n        ulPhones.innerHTML += `<li\n         style=\"background-color: rgb(235, 243, 201);\n         margin: 5px;\n         padding: 4px;\n         width: 380px;\n        \">${elem.name}</li>`;\n      });\n      blockPhones.append(ulPhones);\n      createNotification('<h2>recived all details phones succes!!!</h2>');\n    });\n};\n\ngetIdPhones().then(arr => {\n  const listId = arr.map(phone => phone.id);\n\n  getFirstReceivedDetails(listId);\n  getAllSuccessfulDetails(listId);\n});\n"]}